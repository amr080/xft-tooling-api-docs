<!doctype html>
<html lang="en" dir="ltr" class="docs-wrapper docs-doc-page docs-version-current plugin-docs plugin-id-default docs-doc-id-gasless-api/guides/build-a-dapp-with-gasless-api">
<head>
<meta charset="UTF-8">
<meta name="generator" content="Docusaurus v2.4.0">
<title data-rh="true">How to build a dApp with Gasless API (Next.js) | 0x</title><meta data-rh="true" name="viewport" content="width=device-width,initial-scale=1"><meta data-rh="true" name="twitter:card" content="summary_large_image"><meta data-rh="true" property="og:image" content="https://0x.org/docs/img/0x-social-card.jpg"><meta data-rh="true" name="twitter:image" content="https://0x.org/docs/img/0x-social-card.jpg"><meta data-rh="true" property="og:url" content="https://0x.org/docs/next/gasless-api/guides/build-a-dapp-with-gasless-api"><meta data-rh="true" name="docusaurus_locale" content="en"><meta data-rh="true" name="docsearch:language" content="en"><meta data-rh="true" name="docusaurus_version" content="current"><meta data-rh="true" name="docusaurus_tag" content="docs-default-current"><meta data-rh="true" name="docsearch:version" content="current"><meta data-rh="true" name="docsearch:docusaurus_tag" content="docs-default-current"><meta data-rh="true" property="og:title" content="How to build a dApp with Gasless API (Next.js) | 0x"><meta data-rh="true" name="description" content="Learn how to implement Gasless API to build gasless approvals and swaps into your dApp."><meta data-rh="true" property="og:description" content="Learn how to implement Gasless API to build gasless approvals and swaps into your dApp."><link data-rh="true" rel="icon" href="/docs/img/favicon.ico"><link data-rh="true" rel="canonical" href="https://0x.org/docs/next/gasless-api/guides/build-a-dapp-with-gasless-api"><link data-rh="true" rel="alternate" href="https://0x.org/docs/next/gasless-api/guides/build-a-dapp-with-gasless-api" hreflang="en"><link data-rh="true" rel="alternate" href="https://0x.org/docs/next/gasless-api/guides/build-a-dapp-with-gasless-api" hreflang="x-default"><link rel="preconnect" href="https://www.google-analytics.com">
<link rel="preconnect" href="https://www.googletagmanager.com">
<script async src="https://www.googletagmanager.com/gtag/js?id=G-Z369GEYN6J"></script>
<script>function gtag(){dataLayer.push(arguments)}window.dataLayer=window.dataLayer||[],gtag("js",new Date),gtag("config","G-Z369GEYN6J",{anonymize_ip:!0})</script>





<script src="./docs/scripts/fullstory.js" async innerhtml="window[&#39;_fs_host&#39;] = &#39;fullstory.com&#39;;
    window[&#39;_fs_script&#39;] = &#39;edge.fullstory.com/s/fs.js&#39;;
    window[&#39;_fs_org&#39;] = &#39;o-1RR7B6-na1&#39;;
    window[&#39;_fs_namespace&#39;] = &#39;FS&#39;;
    !function(m,n,e,t,l,o,g,y){var s,f,a=function(h){
    return!(h in m)||(m.console&amp;&amp;m.console.log&amp;&amp;m.console.log(&#39;FullStory namespace conflict. Please set window[&quot;_fs_namespace&quot;].&#39;),!1)}(e)
    ;function j(b){var h,d=[];function k(){h&amp;&amp;(d.forEach((function(b){var d;try{d=b[h[0]]&amp;&amp;b[h[0]](h[1])}catch(h){return void(b[3]&amp;&amp;b[3](h))}
    d&amp;&amp;d.then?d.then(b[2],b[3]):b[2]&amp;&amp;b[2](d)})),d.length=0)}function r(b){return function(d){h||(h=[b,d],k())}}return b(r(0),r(1)),{
    then:function(b,h){return j((function(r,i){d.push([b,h,r,i]),k()}))}}}a&amp;&amp;(g=m[e]=function(){var b=function(b,d,k,r){function i(i,c){
    h(b,d,k,i,c,r)}r=r||2;var c,u=/Async$/;return u.test(b)?(b=b.replace(u,&quot;&quot;),&quot;function&quot;==typeof Promise?new Promise(i):j(i)):h(b,d,k,c,c,r)}
    ;function h(h,d,k,r,i,c){return b._api?b._api(h,d,k,r,i,c):(b.q&amp;&amp;b.q.push([h,d,k,r,i,c]),null)}return b.q=[],b}(),y=function(b){function h(h){
    &quot;function&quot;==typeof h[4]&amp;&amp;h[4](new Error(b))}var d=g.q;if(d){for(var k=0;k&lt;d.length;k++)h(d[k]);d.length=0,d.push=h}},function(){
    (o=n.createElement(t)).async=!0,o.crossOrigin=&quot;anonymous&quot;,o.src=&quot;https://&quot;+l,o.onerror=function(){y(&quot;Error loading &quot;+l)}
    ;var b=n.getElementsByTagName(t)[0];b.parentNode.insertBefore(o,b)}(),function(){function b(){}function h(b,h,d){g(b,h,d,1)}function d(b,d,k){
    h(&quot;setProperties&quot;,{type:b,properties:d},k)}function k(b,h){d(&quot;user&quot;,b,h)}function r(b,h,d){k({uid:b},d),h&amp;&amp;k(h,d)}g.identify=r,g.setUserVars=k,
    g.identifyAccount=b,g.clearUserCookie=b,g.setVars=d,g.event=function(b,d,k){h(&quot;trackEvent&quot;,{name:b,properties:d},k)},g.anonymize=function(){r(!1)
    },g.shutdown=function(){h(&quot;shutdown&quot;)},g.restart=function(){h(&quot;restart&quot;)},g.log=function(b,d){h(&quot;log&quot;,{level:b,msg:d})},g.consent=function(b){
    h(&quot;setIdentity&quot;,{consent:!arguments.length||b})}}(),s=&quot;fetch&quot;,f=&quot;XMLHttpRequest&quot;,g._w={},g._w[f]=m[f],g._w[s]=m[s],m[s]&amp;&amp;(m[s]=function(){
    return g._w[s].apply(this,arguments)}),g._v=&quot;2.0.0&quot;)}(window,document,window._fs_namespace,&quot;script&quot;,window._fs_script);"></script><link rel="stylesheet" href="/docs/assets/css/styles.effab45a.css">
<link rel="preload" href="/docs/assets/js/runtime~main.81fc3c4f.js" as="script">
<link rel="preload" href="/docs/assets/js/main.f8b18ed4.js" as="script">
</head>
<body class="navigation-with-keyboard">
<script>!function(){function t(t){document.documentElement.setAttribute("data-theme",t)}var e=function(){var t=null;try{t=new URLSearchParams(window.location.search).get("docusaurus-theme")}catch(t){}return t}()||function(){var t=null;try{t=localStorage.getItem("theme")}catch(t){}return t}();t(null!==e?e:"dark")}(),document.documentElement.setAttribute("data-announcement-bar-initially-dismissed",function(){try{return"true"===localStorage.getItem("docusaurus.announcement.dismiss")}catch(t){}return!1}())</script><div id="__docusaurus">
<div role="region" aria-label="Skip to main content"><a class="skipToContent_RBc3" href="#docusaurus_skipToContent_fallback">Skip to main content</a></div><div class="announcementBar_q6Dn" style="background-color:#A2FFC1" role="banner"><div class="announcementBarPlaceholder_f0g1"></div><div class="content_tpQP announcementBarContent_uv59">📣 0x API v2 is in closed beta. Get your app ready with the <a target="_blank" rel="noopener noreferrer" href="/docs/next/category/upgrading">v2 migration guide</a> to ensure a smooth transition.</div><button type="button" aria-label="Close" class="clean-btn close closeButton_NkLk announcementBarClose_O9cL"><svg viewBox="0 0 15 15" width="14" height="14"><g stroke="currentColor" stroke-width="3.1"><path d="M.75.75l13.5 13.5M14.25.75L.75 14.25"></path></g></svg></button></div><nav aria-label="Main" class="navbar navbar--fixed-top"><div class="navbar__inner"><div class="navbar__items"><button aria-label="Toggle navigation bar" aria-expanded="false" class="navbar__toggle clean-btn" type="button"><svg width="30" height="30" viewBox="0 0 30 30" aria-hidden="true"><path stroke="currentColor" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" d="M4 7h22M4 15h22M4 23h22"></path></svg></button><a class="navbar__brand" href="/docs/"><div class="navbar__logo"><img src="/docs/img/0x-logo.png" alt="0x Docs" class="themedImage_EY2p themedImage--light_a36Z"><img src="/docs/img/0x-logo.png" alt="0x Docs" class="themedImage_EY2p themedImage--dark_RAPR"></div></a><a class="navbar__item navbar__link" href="/docs/introduction/welcome">Docs</a><div class="navbar__item dropdown dropdown--hoverable"><a class="navbar__link" aria-haspopup="true" aria-expanded="false" role="button" href="/docs/next/introduction/welcome">🚧 2.0 beta</a><ul class="dropdown__menu"><li><a aria-current="page" class="dropdown__link dropdown__link--active" href="/docs/next/gasless-api/guides/build-a-dapp-with-gasless-api">🚧 2.0 beta</a></li><li><a class="dropdown__link" href="/docs/gasless-api/guides/build-a-dapp-with-gasless-api">1.0</a></li></ul></div></div><div class="navbar__items navbar__items--right"><a href="https://dashboard.0x.org/" target="_blank" rel="noopener noreferrer" class="navbar__item navbar__link">Dashboard<svg width="13.5" height="13.5" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_lY7B"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a><a href="https://discord.com/invite/official0x" target="_blank" rel="noopener noreferrer" class="navbar__item navbar__link header-discord-link"></a><a href="https://twitter.com/0xproject" target="_blank" rel="noopener noreferrer" class="navbar__item navbar__link header-twitter-link"></a><a href="https://github.com/0xProject/0x-examples" target="_blank" rel="noopener noreferrer" class="navbar__item navbar__link header-github-link"></a><div class="toggle_kwAF colorModeToggle_yraK"><button class="clean-btn toggleButton_ARJM toggleButtonDisabled_h4vk" type="button" disabled="" title="Switch between dark and light mode (currently dark mode)" aria-label="Switch between dark and light mode (currently dark mode)" aria-live="polite"><svg viewBox="0 0 24 24" width="24" height="24" class="lightToggleIcon_Oddq"><path fill="currentColor" d="M12,9c1.65,0,3,1.35,3,3s-1.35,3-3,3s-3-1.35-3-3S10.35,9,12,9 M12,7c-2.76,0-5,2.24-5,5s2.24,5,5,5s5-2.24,5-5 S14.76,7,12,7L12,7z M2,13l2,0c0.55,0,1-0.45,1-1s-0.45-1-1-1l-2,0c-0.55,0-1,0.45-1,1S1.45,13,2,13z M20,13l2,0c0.55,0,1-0.45,1-1 s-0.45-1-1-1l-2,0c-0.55,0-1,0.45-1,1S19.45,13,20,13z M11,2v2c0,0.55,0.45,1,1,1s1-0.45,1-1V2c0-0.55-0.45-1-1-1S11,1.45,11,2z M11,20v2c0,0.55,0.45,1,1,1s1-0.45,1-1v-2c0-0.55-0.45-1-1-1C11.45,19,11,19.45,11,20z M5.99,4.58c-0.39-0.39-1.03-0.39-1.41,0 c-0.39,0.39-0.39,1.03,0,1.41l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0s0.39-1.03,0-1.41L5.99,4.58z M18.36,16.95 c-0.39-0.39-1.03-0.39-1.41,0c-0.39,0.39-0.39,1.03,0,1.41l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0c0.39-0.39,0.39-1.03,0-1.41 L18.36,16.95z M19.42,5.99c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06c-0.39,0.39-0.39,1.03,0,1.41 s1.03,0.39,1.41,0L19.42,5.99z M7.05,18.36c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06 c-0.39,0.39-0.39,1.03,0,1.41s1.03,0.39,1.41,0L7.05,18.36z"></path></svg><svg viewBox="0 0 24 24" width="24" height="24" class="darkToggleIcon_hmTv"><path fill="currentColor" d="M9.37,5.51C9.19,6.15,9.1,6.82,9.1,7.5c0,4.08,3.32,7.4,7.4,7.4c0.68,0,1.35-0.09,1.99-0.27C17.45,17.19,14.93,19,12,19 c-3.86,0-7-3.14-7-7C5,9.07,6.81,6.55,9.37,5.51z M12,3c-4.97,0-9,4.03-9,9s4.03,9,9,9s9-4.03,9-9c0-0.46-0.04-0.92-0.1-1.36 c-0.98,1.37-2.58,2.26-4.4,2.26c-2.98,0-5.4-2.42-5.4-5.4c0-1.81,0.89-3.42,2.26-4.4C12.92,3.04,12.46,3,12,3L12,3z"></path></svg></button></div><div class="searchBox_gume"><div class="mendable-search"><button id="ms-search-bar" style="background-color:#fff;border-color:#6B728033;color:#9ca3af" class="ms-global search-btn__input ms-m-0 ms-flex ms-h-10 ms-w-full ms-flex-row ms-items-center ms-justify-between ms-gap-2 ms-bg-gray-50 ms-p-1 ms-px-2 ms-outline-none ms-ring-0 ms-transition-all hover:ms-cursor-pointer sm:ms-p-2 sm:ms-px-3 ms-border ms-rounded-xl"><div class="ms-global search-btn__input-container ms-flex ms-w-full ms-min-w-0 ms-items-center ms-gap-0 sm:ms-gap-1"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 24 24" style="color:#9ca3af;fill:#9ca3af" class="search-btn__icon hover:fill-white ms-h-5 ms-w-5 ms-fill-gray-400 hover:ms-text-white focus:ms-fill-white focus:ms-text-white sm:ms-h-6 sm:ms-w-6" height="20" width="20" xmlns="http://www.w3.org/2000/svg"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15.5 14h-.79l-.28-.27A6.471 6.471 0 0016 9.5 6.5 6.5 0 109.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"></path></svg><div id="userInput" style="color:#9ca3af" class="ms-global search-btn__input ms-w-full ms-flex-grow ms-truncate ms-bg-transparent ms-text-sm ms-outline-none ms-ring-0 ms-ring-transparent focus:ms-outline-none focus:ms-ring-0 focus:ms-ring-transparent sm:ms-text-base ms-ml-1 ms-flex ms-items-start ms-justify-start">Search...</div></div><div style="background-color:#fff;border-color:#6B728033;color:#9ca3af" class="search-btn__shortcut ms-z-10 ms-flex ms-flex-row ms-items-center ms-gap-1 ms-rounded-lg ms-border ms-py-[2px] ms-px-[8px] ms-text-xs ms-text-gray-400 ms-transition-all disabled:ms-bg-opacity-10"><span>CTRL</span><span>K</span></div></button><div></div></div></div></div></div><div role="presentation" class="navbar-sidebar__backdrop"></div></nav><div id="docusaurus_skipToContent_fallback" class="main-wrapper mainWrapper_QDaL docsWrapper_NOCI"><button aria-label="Scroll back to top" class="clean-btn theme-back-to-top-button backToTopButton_OuAX" type="button"></button><div class="docPage_vc49"><main class="docMainContainer_sClo docMainContainerEnhanced_PgH3"><div class="container padding-top--md padding-bottom--lg"><div class="row"><div class="col docItemCol_PKDA"><div class="theme-doc-version-banner alert alert--warning margin-bottom--md" role="alert"><div>🚧 You are viewing version 2.0 of the documentation which is in beta. Request early access to 0x v2 <a href="https://go.0x.org/v2-beta-docs">here</a>.</div><div class="margin-top--md">See the <b><a href="/docs/gasless-api/guides/build-a-dapp-with-gasless-api">1.0 version</a></b> here.</div></div><div class="docItemContainer_QFIQ"><article><span class="theme-doc-version-badge badge badge--secondary">Version: 🚧 2.0 beta</span><div class="tocCollapsible_Xuni theme-doc-toc-mobile tocMobile_rGAa"><button type="button" class="clean-btn tocCollapsibleButton_mL4T">On this page</button></div><div class="theme-doc-markdown markdown"><h1>How to build a dApp with Gasless API (Next.js)</h1><p><em>Learn how to use Gasless API to build gasless approvals and swaps into your dApp.</em></p><h2 class="anchor anchorWithStickyNavbar_ZTCp" id="overview">Overview<a href="#overview" class="hash-link" aria-label="Direct link to Overview" title="Direct link to Overview">​</a></h2><p>In this guide, we walk-through the Gasless API demo app (<a href="https://0x-examples.vercel.app/" target="_blank" rel="noopener noreferrer">live demo</a> | <a href="https://github.com/0xProject/0x-examples/tree/main/gasless-next-app" target="_blank" rel="noopener noreferrer">code</a>) built with <a href="https://nextjs.org/" target="_blank" rel="noopener noreferrer">Next.js</a> and <a href="/docs/gasless-api/introduction">0x Gasless API</a>. It covers best practices when implementing gasless approvals and swap functionality into your dApp or workflow.</p><p>The principles covered are are the same ones used by production-level dApps, such as in the <a href="https://help.matcha.xyz/en/articles/7939087-what-is-matcha-auto" target="_blank" rel="noopener noreferrer">Matcha Auto</a> feature of <a href="https://matcha.xyz/" target="_blank" rel="noopener noreferrer">Matcha.xyz</a>, in which Matcha submits the transactions and handles the gas on users behalf.</p><p>This demo showcases trading USDC (a gasless approved token that is on the Polygon-supported sell list) for WMATIC (a non-gasless approved token), <strong><a target="_blank" href="/docs/assets/files/technical-flow-specific-path-82640c61333a07ea940b297b58145622.png">(see here for diagram)</a></strong>. An expanded version of this app that handles more token support is coming soon.</p><p>Checkout the live demo 👉 <a href="https://0x-examples.vercel.app/" target="_blank" rel="noopener noreferrer">here</a></p><p><img loading="lazy" src="/docs/assets/images/tx-relay-demo-screen-recording-b3682cca18823d8c05b90e9d7126c66c.gif" width="500" height="333" class="img_D_lb"></p><p>Enabling Gasless in your app allows you to:</p><ul><li>build more intuitive user interfaces and user flows in your applications</li><li>improve your conversion funnel drop-offs due to insufficient gas, and</li><li>set yourself up to easily onboard the next wave of users into Web3.</li></ul><p>Video tutorial version here:</p><iframe width="560" height="315" src="https://www.youtube.com/embed/0d0tVwJCbiw?si=gY-tgTDJo7h4t4aH" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"></iframe><h2 class="anchor anchorWithStickyNavbar_ZTCp" id="pre-requisites">Pre-requisites<a href="#pre-requisites" class="hash-link" aria-label="Direct link to Pre-requisites" title="Direct link to Pre-requisites">​</a></h2><div class="theme-admonition theme-admonition-info alert alert--info admonition_BahX"><div class="admonitionHeading_i6wc"><span class="admonitionIcon_nAy4"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_K8av"><p>To create an account, and get your live API keys, visit the <a href="https://go.0x.org/create-account-txrelay-z" target="_blank" rel="noopener noreferrer">0x Dashboard</a>.</p></div></div><p>Before diving into this walk-through, it&#x27;s essential to ensure you are familiar with the following tools and concepts:</p><ul><li>React</li><li>Next.js 13, App Router</li><li>Viem</li><li>Wagmi</li><li>An understanding of how Gasless API works. If not, read:<ul><li><a href="/docs/gasless-api/introduction">Introduction to Gasless</a></li><li><a href="/docs/gasless-api/guides/understanding-gasless-api">Understanding Gasless API</a></li></ul></li></ul><p>Currently, Gasless API is supported on Mainnet, Polygon and Arbitrum. This demo is built on Polygon to provide a cost-effective environment for experimentation. You can always modify this app to support Mainnet by adjusting the <a href="/docs/gasless-api/api-references/overview#overview">chain id</a> header for each endpoint.</p><div class="theme-admonition theme-admonition-info alert alert--info admonition_BahX"><div class="admonitionHeading_i6wc"><span class="admonitionIcon_nAy4"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_K8av"><p>Here is the github repo, feel free to use it to get started quickly for your own project: <a href="https://github.com/0xProject/0x-examples/tree/main/gasless-next-app" target="_blank" rel="noopener noreferrer">https://github.com/0xProject/0x-examples/tree/main/gasless-next-app</a></p><p>This is a demo, and is not ready for production use. The code has not been audited and does not account for all error handling. Use at your own risk.</p></div></div><h2 class="anchor anchorWithStickyNavbar_ZTCp" id="how-does-it-work">How does it work?<a href="#how-does-it-work" class="hash-link" aria-label="Direct link to How does it work?" title="Direct link to How does it work?">​</a></h2><p>As covered in <a href="/docs/gasless-api/guides/understanding-gasless-api">Understanding Gasless API</a>, this API returns liquidity—<a href="/docs/gasless-api/api-references/get-tx-relay-v1-swap-price">prices</a> and <a href="/docs/gasless-api/api-references/get-tx-relay-v1-swap-quote">quotes</a>—to end users. If a user is happy with a quote the API has provided, they can sign an EIP-712 message for the approval and trade (the approval object enables gasless approvals and the trade object enables gasless swaps). Then, Gasless API can <a href="/docs/gasless-api/api-references/post-tx-relay-v1-swap-submit">submit</a> the transaction to the blockchain on behalf of the user, eliminating the need for the end user to pay for gas manually.</p><p>This demo app covers the flow outlined in the <a href="/docs/gasless-api/guides/understanding-gasless-api#gasless-api-flow">Gasless Approval + Gasless API Flow</a>.</p><p>This demo app showcases trading USDC (a gasless approved token that is on the Polygon-supported sell list) for WMATIC (a non-gasless approved token), specifically this flow:
<img loading="lazy" alt="Demo app flow" src="/docs/assets/images/technical-flow-specific-path-82640c61333a07ea940b297b58145622.png" width="3974" height="3864" class="img_D_lb">.</p><p>Note, Gasless API is composable with Swap API if you want to offer execution optionality (for example native tokens which is not supported by Gasless API). You can design a UX where advanced users can opt in and opt out of gasless without sacrificing experience. Check out <a href="/docs/gasless-api/guides/understanding-gasless-api#composing-gasless-api--swap-api">Composing Gasless Approval + Gasless API + Swap API Flow</a> if you would include this functionality.</p><h2 class="anchor anchorWithStickyNavbar_ZTCp" id="project-structure">Project structure<a href="#project-structure" class="hash-link" aria-label="Direct link to Project structure" title="Direct link to Project structure">​</a></h2><p>This demo app is setup using <a href="https://nextjs.org/docs" target="_blank" rel="noopener noreferrer">Next.js 13 App Router</a>. Here is an explanation of the structure of the app and key files.</p><div class="codeBlockContainer_jAEB theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_KvLn"><pre tabindex="0" class="prism-code language-text codeBlock_MJTT thin-scrollbar"><code class="codeBlockLines_ZhcI"><span class="token-line" style="color:#F8F8F2"><span class="token plain">gasless-next-app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">├── app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   ├── layout.tsx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   ├── page.tsx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   ├── providers.tsx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   │</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   ├── api</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   │   ├── price</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   │   │   └── route.ts</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   │   ├── quote</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   │   │   └── route.ts</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   │   ├── status</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   │   │   └── route.ts</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   │   └── submit</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   │       └── route.ts</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   │</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   └── components</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│         ├── price.tsx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│         ├── quote.tsx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│         └── status.tsx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">└─── src</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     ├── supports-permit</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     │   └── 137.json</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     └── utils</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">         ├── eip712_utils.types.ts</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">         ├── schema.ts</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">         ├── signature.ts</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">         └── constants.ts</span><br></span></code></pre><div class="buttonGroup_yTD5"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_hEBG" aria-hidden="true"><svg class="copyButtonIcon_e3Xs" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_IS7T" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><code>/app/</code> - The root directory that contains global structure of the application that contains shared layouts and additional configuration</li><li><code>/app/layout.tsx/</code> - Contains the global layout components that wrap all our pages</li><li><code>/app/page.tsx/</code> - Contains all the components (PageView, QuoteView, StatusView) for our app and the logic for when each should show in the UI</li><li><code>/app/providers.tsx/</code> - Sets up global context providers such as <a href="https://www.rainbowkit.com/docs/installation#wrap-providers" target="_blank" rel="noopener noreferrer">RainbowKitProvider and WagmiConfig</a></li><li><code>/api/</code> - Contains the API routes (/price, /quote, /submit, /status)</li><li><code>/components/</code> - Contains the the components that are used as the UI in our app(PageView, QuoteView, StatusView)</li><li><code>/src/</code> - Contains non-component or non-API routes files. Contains token lists (e.g. tokens that support gasless approvals/Permit) and utility files</li></ul><h2 class="anchor anchorWithStickyNavbar_ZTCp" id="core-concepts-overview">Core concepts overview<a href="#core-concepts-overview" class="hash-link" aria-label="Direct link to Core concepts overview" title="Direct link to Core concepts overview">​</a></h2><p>Gasless API offers <a href="/docs/gasless-api/api-references/overview">four different endpoints</a>. It&#x27;s important to understand how these endpoints are leverage by the UI/UX components and how they are related concepts such as the user&#x27;s wallet and token lists.</p><p>Here we cover a summary of core concepts and when each API endpoint is used in this app:</p><ul><li><p><a href="/docs/gasless-api/guides/build-a-dapp-with-gasless-api#-rainbowkit">🌈 RainbowKit</a></p><ul><li>A React library that makes it easy to add wallet connection to your dApp</li></ul></li><li><p><a href="/docs/gasless-api/guides/build-a-dapp-with-gasless-api#-token-lists">🪙 Token lists</a></p><ul><li>(1) Gasless approvals token list - Gasless approvals are available for ERC-20 token that supports Permit (EIP-2612). You can find a list of these tokens in the <a href="/docs/gasless-api/gasless-approvals-token-list">gasless approvals list</a> or you can also use <a href="/docs/gasless-api/api-references/get-tx-relay-v1-swap-quote#response"><code>/tx-relay/v1/swap/quote</code></a> to check if <code>isGaslessAvailable = true</code></li><li>(2) Supported sell tokens - On Mainnet, Gasless API supports only selling ERC-20 tokens that are on <a href="https://tokenlists.org/token-list?url=https://gateway.ipfs.io/ipns/tokens.uniswap.org" target="_blank" rel="noopener noreferrer">Uniswap’s token list</a>. On Polygon and Arbitrum, all Swap API supported tokens are supported.</li></ul></li><li><p><a href="/docs/gasless-api/guides/build-a-dapp-with-gasless-api#-priceview">🏷 PriceView</a></p><ul><li>Component for users to browse for a price without committing to a trade (i.e. get indicative price)</li><li>Check if token allowance as been set</li><li>Check if token supports Permit -&gt; if yes, gasless approval; otherwise, pay for approval</li><li>Fetch indicative with GET <a href="/docs/gasless-api/api-references/get-tx-relay-v1-swap-price"><code>/tx-relay/v1/swap/price</code></a><ul><li>Wrap API call behind <a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/app/api/price/route.ts" target="_blank" rel="noopener noreferrer"><code>/app/api/price/route.ts</code></a></li></ul></li></ul></li><li><p><a href="/docs/gasless-api/guides/build-a-dapp-with-gasless-api#-quoteview">💸 QuoteView</a></p><ul><li>Component for users to review final quote and submit trade</li><li>Fetch firm quote with GET <a href="/docs/gasless-api/api-references/get-tx-relay-v1-swap-quote"><code>/tx-relay/v1/swap/quote</code></a><ul><li>Wrap API call behind <a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/app/api/quote/route.ts" target="_blank" rel="noopener noreferrer"><code>/app/api/quote/route.ts</code></a></li></ul></li><li>Sign gasless approval (if needed) and sign trade objects</li><li>Submit the trade via POST <a href="/docs/gasless-api/api-references/post-tx-relay-v1-swap-submit"><code>/tx-relay/v1/swap/submit</code></a><ul><li>Wrap API call behind <a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/app/api/submit/route.ts" target="_blank" rel="noopener noreferrer"><code>/app/api/submit/route.ts</code></a></li></ul></li></ul></li><li><p><a href="/docs/gasless-api/guides/build-a-dapp-with-gasless-api#-statusview">✅ StatusView</a></p><ul><li>Component to check the status of the trade</li><li>Uses GET <a href="https://0x.org/docs/gasless-api/api-references/get-tx-relay-v1-swap-status-trade-hash" target="_blank" rel="noopener noreferrer"><code>/tx-relay/v1/swap/status/:trade-hash</code></a> if the submitted trade was successful<ul><li>Wrap API call behind <a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/app/api/status/route.ts" target="_blank" rel="noopener noreferrer"><code>/app/api/status/route.ts</code></a></li></ul></li></ul></li></ul><h2 class="anchor anchorWithStickyNavbar_ZTCp" id="core-concepts-deep-dive">Core concepts deep-dive<a href="#core-concepts-deep-dive" class="hash-link" aria-label="Direct link to Core concepts deep-dive" title="Direct link to Core concepts deep-dive">​</a></h2><h2 class="anchor anchorWithStickyNavbar_ZTCp" id="-rainbowkit">🌈 RainbowKit<a href="#-rainbowkit" class="hash-link" aria-label="Direct link to 🌈 RainbowKit" title="Direct link to 🌈 RainbowKit">​</a></h2><h3 class="anchor anchorWithStickyNavbar_ZTCp" id="what-is-it">What is it?<a href="#what-is-it" class="hash-link" aria-label="Direct link to What is it?" title="Direct link to What is it?">​</a></h3><p><a href="https://www.rainbowkit.com/" target="_blank" rel="noopener noreferrer">RainbowKit</a> is a React library that makes it easy to add wallet connection to your dapp. We are using their <a href="https://www.rainbowkit.com/docs/installation#further-examples" target="_blank" rel="noopener noreferrer">Next.js App Router example</a> in our app.</p><p>Check out their <a href="https://www.rainbowkit.com/docs/installation" target="_blank" rel="noopener noreferrer">installation instructions</a> to understand the configurations. You can <a href="https://www.rainbowkit.com/docs/installation#configure" target="_blank" rel="noopener noreferrer">configure</a> your desired chains and generate the required connectors.</p><h3 class="anchor anchorWithStickyNavbar_ZTCp" id="code">Code<a href="#code" class="hash-link" aria-label="Direct link to Code" title="Direct link to Code">​</a></h3><h4 class="anchor anchorWithStickyNavbar_ZTCp" id="setup-walletconnect-projectid-in-providerstsx">Setup WalletConnect <code>projectId</code> in providers.tsx<a href="#setup-walletconnect-projectid-in-providerstsx" class="hash-link" aria-label="Direct link to setup-walletconnect-projectid-in-providerstsx" title="Direct link to setup-walletconnect-projectid-in-providerstsx">​</a></h4><p>RainbowKit relies on WalletConnect. Obtain a free <code>projectId</code> from <a href="https://cloud.walletconnect.com/app" target="_blank" rel="noopener noreferrer">WalletConnect Cloud</a> and replace the key <a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/.env.template#L1-L3" target="_blank" rel="noopener noreferrer">here</a>.</p><div class="language-typescript codeBlockContainer_jAEB theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_KvLn"><pre tabindex="0" class="prism-code language-typescript codeBlock_MJTT thin-scrollbar"><code class="codeBlockLines_ZhcI"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">// Inside /gasless-next-app/.env.template</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># To </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">get</span><span class="token plain"> a RainbowKit relies on WalletConnect</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">get</span><span class="token plain"> a free projectId here</span><span class="token operator">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token plain">cloud</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">walletconnect</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">com</span><span class="token operator">/</span><span class="token plain">app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token constant" style="color:rgb(189, 147, 249)">NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID</span><span class="token operator">=</span><br></span></code></pre><div class="buttonGroup_yTD5"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_hEBG" aria-hidden="true"><svg class="copyButtonIcon_e3Xs" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_IS7T" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-typescript codeBlockContainer_jAEB theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_KvLn"><pre tabindex="0" class="prism-code language-typescript codeBlock_MJTT thin-scrollbar"><code class="codeBlockLines_ZhcI"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">// Inside /app/providers/tsx</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> projectId </span><span class="token operator">=</span><span class="token plain"> process</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">env</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token constant" style="color:rgb(189, 147, 249)">NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">as</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// Replace with your own free key from WalletConnect Cloud https://cloud.walletconnect.com/sign-in</span><br></span></code></pre><div class="buttonGroup_yTD5"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_hEBG" aria-hidden="true"><svg class="copyButtonIcon_e3Xs" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_IS7T" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_ZTCp" id="-token-lists">🪙 Token lists<a href="#-token-lists" class="hash-link" aria-label="Direct link to 🪙 Token lists" title="Direct link to 🪙 Token lists">​</a></h2><h3 class="anchor anchorWithStickyNavbar_ZTCp" id="what-is-it-1">What is it?<a href="#what-is-it-1" class="hash-link" aria-label="Direct link to What is it?" title="Direct link to What is it?">​</a></h3><p>Gasless API offers gasless approvals and gasless swaps, but for a subset of tokens. It&#x27;s important to understand which tokens are applicable and how to check for support availability.</p><ul><li><p><strong>Gasless approvals tokens list</strong> - You can find a list of tokens that work with gasless approvals in the <a href="/docs/gasless-api/gasless-approvals-token-list">gasless approvals token list</a>. Generally, these are tokens that support EIP-2612. You can also examine a token’s eligibility at trade time, by observing the response from requests to <a href="/docs/gasless-api/api-references/get-tx-relay-v1-swap-quote#response"><code>/tx-relay/v1/swap/quote</code></a>. If the variable <code>isGaslessAvailable = true</code>, the token the user is selling supports gasless approvals.</p></li><li><p><strong>Supported sell tokens list</strong> - On Mainnet, Gasless API supports only selling ERC-20 tokens that are on <a href="https://tokenlists.org/token-list?url=https://gateway.ipfs.io/ipns/tokens.uniswap.org" target="_blank" rel="noopener noreferrer">Uniswap’s token list</a>. On Polygon and Arbitrum, all Swap API supported tokens are supported.</p></li></ul><p>This demo how to utilize these two lists for a specific use case on the Polygon Network (137) - trading USDC (<em><a href="https://0x.org/docs/gasless-api/gasless-approvals-token-list#polygon" target="_blank" rel="noopener noreferrer">gasless approved token</a></em> that is <em>on the Polygon-supported sell list</em>) for WMATIC (<em>a non-gasless approved token</em>)</p><h3 class="anchor anchorWithStickyNavbar_ZTCp" id="code-1">Code<a href="#code-1" class="hash-link" aria-label="Direct link to Code" title="Direct link to Code">​</a></h3><h4 class="anchor anchorWithStickyNavbar_ZTCp" id="verify-selltoken-against-gasless-approved-token-list">Verify <code>sellToken</code> against gasless approved token list<a href="#verify-selltoken-against-gasless-approved-token-list" class="hash-link" aria-label="Direct link to verify-selltoken-against-gasless-approved-token-list" title="Direct link to verify-selltoken-against-gasless-approved-token-list">​</a></h4><p>To check if the <code>sellToken</code> supports gasless approvals, we setup a .json file of all the <a href="https://0x.org/docs/gasless-api/gasless-approvals-token-list#polygon" target="_blank" rel="noopener noreferrer">tokens that support permit on Polygon</a> in the <a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/src/supports-permit/137.json" target="_blank" rel="noopener noreferrer"><code>/supports-permit/137.json</code></a> file.</p><div class="language-json codeBlockContainer_jAEB theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_KvLn"><pre tabindex="0" class="prism-code language-json codeBlock_MJTT thin-scrollbar"><code class="codeBlockLines_ZhcI"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">// Inside /src/supports-permit/137.json, setup database of tokens that support Permit using token address as the key</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">&quot;0x2791bca1f2de4661ed88a30c99a7a9449aa84174&quot;</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token property">&quot;kind&quot;</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">&quot;permit&quot;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token property">&quot;domain&quot;</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">&quot;USD Coin (PoS)&quot;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token property">&quot;version&quot;</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">&quot;1&quot;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token property">&quot;chainId&quot;</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number">137</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token property">&quot;verifyingContract&quot;</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">&quot;0x2791bca1f2de4661ed88a30c99a7a9449aa84174&quot;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token property">&quot;salt&quot;</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">&quot;0x0000000000000000000000000000000000000000000000000000000000000089&quot;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token property">&quot;domainSeparator&quot;</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">&quot;0x294369e003769a2d4d625e8a9ebebffa09ff70dd7c708497d8b56d2c2d199a19&quot;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">&quot;0x7ceb23fd6bc0add59e62ac25578270cff1b9f619&quot;</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token property">&quot;kind&quot;</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">&quot;executeMetaTransaction::approve&quot;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token property">&quot;domain&quot;</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">&quot;Wrapped Ether&quot;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token property">&quot;version&quot;</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">&quot;1&quot;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token property">&quot;chainId&quot;</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number">137</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token property">&quot;verifyingContract&quot;</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">&quot;0x7ceb23fd6bc0add59e62ac25578270cff1b9f619&quot;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token property">&quot;salt&quot;</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">&quot;0x0000000000000000000000000000000000000000000000000000000000000089&quot;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token property">&quot;domainSeparator&quot;</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">&quot;0x2739d6640de1503427ab7c5bd20094483387d4f8de3af1aeb1cfbf826f1b5b30&quot;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">...</span><br></span></code></pre><div class="buttonGroup_yTD5"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_hEBG" aria-hidden="true"><svg class="copyButtonIcon_e3Xs" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_IS7T" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We check <code>sellToken</code> against this list to see if it is eligible for gasless approvals.</p><div class="language-typescript codeBlockContainer_jAEB theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_KvLn"><pre tabindex="0" class="prism-code language-typescript codeBlock_MJTT thin-scrollbar"><code class="codeBlockLines_ZhcI"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">// Inside /app/components/price.tsx, check if the sellToken supports Permit</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">MATIC_PERMIT_TOKENS</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">&quot;../../src/supports-permit/137.json&quot;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> isSellTokenPermit </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">Boolean</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">maticPermitTokensDataTyped</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">sellToken</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_yTD5"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_hEBG" aria-hidden="true"><svg class="copyButtonIcon_e3Xs" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_IS7T" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_ZTCp" id="-priceview">🏷 PriceView<a href="#-priceview" class="hash-link" aria-label="Direct link to 🏷 PriceView" title="Direct link to 🏷 PriceView">​</a></h2><h3 class="anchor anchorWithStickyNavbar_ZTCp" id="what-is-it-2">What is it?<a href="#what-is-it-2" class="hash-link" aria-label="Direct link to What is it?" title="Direct link to What is it?">​</a></h3><p>This component is for users to browse for a price without committing to a trade, aka, get the indicative price. The code for the component lives in <a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/app/components/price.tsx" target="_blank" rel="noopener noreferrer"><code>/app/components/price.tsx</code></a>. The logic for when this component appears in the UI is in <a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/app/page.tsx#L42-L63" target="_blank" rel="noopener noreferrer"><code>/app/page.tsx</code></a>, it is displayed if the user has not clicked &quot;Review Trade&quot; and finalizes the price.</p><p><img loading="lazy" alt="PriceView Screenshot" src="/docs/assets/images/price-view-screenshot-e7819e1e4da9c9a37dd66b37a02a5a3a.png" width="822" height="622" class="img_D_lb"></p><h3 class="anchor anchorWithStickyNavbar_ZTCp" id="uiux-walk-through">UI/UX Walk-through<a href="#uiux-walk-through" class="hash-link" aria-label="Direct link to UI/UX Walk-through" title="Direct link to UI/UX Walk-through">​</a></h3><ul><li>User selects <strong>sell</strong> and <strong>buy tokens</strong> from the token selectors</li><li>Users inputs a <strong>sellAmount</strong></li><li>Users can <strong>“Connect Wallet”</strong> powered by Rainbowkit</li><li>Whenever sellAmount changes, the <strong>app fetches a price</strong> even if a wallet is not connect</li><li>Displays returned <strong>buyAmount</strong></li><li>When users find a price they like, they can connect their wallet, and switch to the correct network (e.g. Polygon), the button now says <strong>“Review Trade”</strong> if the user has enough of the sell token; otherwise, it reads <strong>“Insufficient Balance”</strong></li><li>Allowance checks<ul><li>Checks if the user has a <strong>sufficient allowance</strong> for the selected token</li><li>Checks if the <strong>sellToken supports Permit</strong> -&gt; if yes, gasless approval; otherwise, pay for approval via standard <a href="https://0x.org/docs/0x-swap-api/advanced-topics/how-to-set-your-token-allowances" target="_blank" rel="noopener noreferrer">token approval route</a></li><li>Sets <code>checkApproval</code> depending if user has sufficient allowance and if sellToken supports Permit</li></ul></li><li>When user clicks <strong>“Review Trade”</strong>, they are take to the QuoteView component</li></ul><h3 class="anchor anchorWithStickyNavbar_ZTCp" id="code-2">Code<a href="#code-2" class="hash-link" aria-label="Direct link to Code" title="Direct link to Code">​</a></h3><h4 class="anchor anchorWithStickyNavbar_ZTCp" id="fetch-price-with-get-tx-relayv1swapprice">Fetch price with GET /tx-relay/v1/swap/price<a href="#fetch-price-with-get-tx-relayv1swapprice" class="hash-link" aria-label="Direct link to Fetch price with GET /tx-relay/v1/swap/price" title="Direct link to Fetch price with GET /tx-relay/v1/swap/price">​</a></h4><p>Fetch <a href="/docs/gasless-api/api-references/get-tx-relay-v1-swap-price"><code>/tx-relay/v1/swap/price</code></a> is wrapped behind <a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/app/api/price/route.ts" target="_blank" rel="noopener noreferrer"><code>app/api/price/route.ts</code></a> and triggered in the UI by <code>useEffect</code> here in <a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/app/components/price.tsx#L116-L155" target="_blank" rel="noopener noreferrer"><code>/app/components/price.tsx</code></a>.</p><p>Wrapping our API key protects it because all API requests are viewable by if someone inspects the browser, but we don’t want them inspecting an finding our keys. Instead, when the user queries for an indicative price, it pings our API setup in <a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/app/api/price/route.ts" target="_blank" rel="noopener noreferrer"><code>app/api/price/route.ts</code></a> and that pings the 0x&#x27;s Gasless API using the API key in the header.</p><p>In addition, we use Next.js App Router&#x27;s built-in data fetching pattern and the <a href="https://react.dev/reference/react/useEffect" target="_blank" rel="noopener noreferrer"><code>useEffect</code></a> hook to make the request. By using <a href="https://react.dev/reference/react/useEffect" target="_blank" rel="noopener noreferrer"><code>useEffect</code></a>, we will get a stream of data updates constantly and automatically, and the UI will quickly respond to any changes, such as when the user inputs a new <code>sellAmount</code>.</p><h4 class="anchor anchorWithStickyNavbar_ZTCp" id="display-formatted-sellamount-and-buyamount">Display formatted <code>sellAmount</code> and <code>buyAmount</code><a href="#display-formatted-sellamount-and-buyamount" class="hash-link" aria-label="Direct link to display-formatted-sellamount-and-buyamount" title="Direct link to display-formatted-sellamount-and-buyamount">​</a></h4><ul><li><a href="https://docs.ethers.org/v5/api/utils/display-logic/" target="_blank" rel="noopener noreferrer"><code>parseUnits</code></a> - Parses a string representing ether, such as the string 1.1 into a BigNumber in wei. This is useful to convert a user inputted value into a BigNumber that is usable for API requests.</li><li><a href="https://docs.ethers.org/v5/api/utils/display-logic/" target="_blank" rel="noopener noreferrer"><code>formatUnits</code></a> - Formats a BigNumberish into a string, which is useful when displaying a balance or displaying a BigNumerish value returned from an API response as a string in the UI.</li></ul><div class="language-typescript codeBlockContainer_jAEB theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_KvLn"><pre tabindex="0" class="prism-code language-typescript codeBlock_MJTT thin-scrollbar"><code class="codeBlockLines_ZhcI"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">// Inside /app/components/price.tsx</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> parsedSellAmount </span><span class="token operator">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    sellAmount </span><span class="token operator">&amp;&amp;</span><span class="token plain"> tradeDirection </span><span class="token operator">===</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">&#x27;sell&#x27;</span><span class="token plain"> </span><span class="token operator">?</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">parseUnits</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">sellAmount</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> sellTokenDecimals</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toString</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">undefined</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> parsedBuyAmount </span><span class="token operator">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    buyAmount </span><span class="token operator">&amp;&amp;</span><span class="token plain"> tradeDirection </span><span class="token operator">===</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">&#x27;buy&#x27;</span><span class="token plain"> </span><span class="token operator">?</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">parseUnits</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">buyAmount</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> buyTokenDecimals</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toString</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">undefined</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup_yTD5"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_hEBG" aria-hidden="true"><svg class="copyButtonIcon_e3Xs" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_IS7T" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-typescript codeBlockContainer_jAEB theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_KvLn"><pre tabindex="0" class="prism-code language-typescript codeBlock_MJTT thin-scrollbar"><code class="codeBlockLines_ZhcI"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">// Inside /app/components/price.tsx</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">setBuyAmount</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token function" style="color:rgb(80, 250, 123)">formatUnits</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">buyAmount</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">18</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup_yTD5"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_hEBG" aria-hidden="true"><svg class="copyButtonIcon_e3Xs" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_IS7T" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_ZTCp" id="set-checkapproval">Set <code>checkApproval</code><a href="#set-checkapproval" class="hash-link" aria-label="Direct link to set-checkapproval" title="Direct link to set-checkapproval">​</a></h4><p>When making <a href="/docs/gasless-api/api-references/get-tx-relay-v1-swap-quote#response"><code>/tx-relay/v1/swap/quote</code></a> request, we can pass the <code>checkApproval</code> flag. This is a boolean that indicates whether or not to check for approval so that we could potentially use the gasless approval feature. The value <code>checkApproval</code> is determined by whether or not the user has already set a token allowance (if set, is the allowance sufficient) and if the token supports permit.</p><div class="language-typescript codeBlockContainer_jAEB theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_KvLn"><pre tabindex="0" class="prism-code language-typescript codeBlock_MJTT thin-scrollbar"><code class="codeBlockLines_ZhcI"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> checkApproval </span><span class="token operator">=</span><span class="token plain"> isSellTokenPermit </span><span class="token operator">&amp;&amp;</span><span class="token plain"> </span><span class="token operator">!</span><span class="token plain">hasSufficientAllowance</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup_yTD5"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_hEBG" aria-hidden="true"><svg class="copyButtonIcon_e3Xs" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_IS7T" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Below is a diagram to help understand different cases (i.e. if the sellToken supports Permit, if the sellToken has set an allowance already).</p><p><img loading="lazy" alt="Gasless API UI Diagram" src="/docs/assets/images/tx-relay-ui-diagram-ec0b4a51825f74a64f6c65fb1d09e53e.jpg" width="8926" height="5489" class="img_D_lb"></p><p>In our demo app, we cover Cases 1 &amp; 2:</p><ul><li><strong>Case 1 (USC → WMATIC)</strong> - in this case, the sellToken, USDC, supports Permit, and no allowance has been set; therefore, <code>checkApproval</code> is set to <code>true</code> because we need both approval object (for gasless approvals) and the trade object (for gasless swaps).</li><li><strong>Case 2 (USC → WMATIC)</strong> - in this case, the sellToken, USDC, supports Permit, and the allowance is enough to cover the trade; therefore, <code>checkApproval</code> is set to <code>false</code> because we do not need a gasless approval object to sign, only trade object (for gasless swaps).</li></ul><p>Currently the demo app does not cover cases 3 and 4, but here is an overview if you would like to include them:</p><ul><li><p><strong>Case 3 (WMATIC → USDC)</strong> - in this case, the sellToken, WMATIC, does not support Permit, and the allowance is enough to cover the trade; therefore, <code>checkApproval</code> is set to <code>false</code> because we do not need a gasless approval object to sign, only trade object (for gasless swaps).</p></li><li><p><strong>Case 4 (WMATIC → USDC)</strong> - in this case, the sellToken, WMATIC, does not support Permit, and no allowance has been set. In this case, the token allowance needs to be set via the <a href="https://0x.org/docs/0x-swap-api/advanced-topics/how-to-set-your-token-allowances" target="_blank" rel="noopener noreferrer">standard route</a> because gasless approvals are not supported. Once it has been set, this case will look like Case 3 (no Permit, max allowance); therefore, <code>checkApproval</code> is set to <code>false</code> because we do not need a gasless approval object to sign, only trade object (for gasless swaps).</p></li></ul><p>Note that only one flow sets <code>checkApproval:true</code>, this is when the token supports permit and no allowance has been set, this is the only time when we need a gasless approval.</p><h2 class="anchor anchorWithStickyNavbar_ZTCp" id="-quoteview">💸 QuoteView<a href="#-quoteview" class="hash-link" aria-label="Direct link to 💸 QuoteView" title="Direct link to 💸 QuoteView">​</a></h2><h3 class="anchor anchorWithStickyNavbar_ZTCp" id="what-is-it-3">What is it?<a href="#what-is-it-3" class="hash-link" aria-label="Direct link to What is it?" title="Direct link to What is it?">​</a></h3><p>This component fetches a firm quote for users to review and submit trade. The logic for when this component appears in the UI is in <a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/app/page.tsx" target="_blank" rel="noopener noreferrer"><code>/app/page.tsx</code></a>, it is displayed after the user has clicked &quot;Review Trade&quot;.</p><p>In this component, the use can sign the gasless approval (if applicable), sign the gasless swap, and submit the order.</p><p>Although gasless approvals and gasless swap are bundled in the same transaction when returned by <a href="/docs/gasless-api/api-references/get-tx-relay-v1-swap-quote#response"><code>/quote</code></a>, they each require a signature for the corresponding EIP-712 object, <code>approval.eip712</code> and <code>trade.eip712</code> respectively. This demo app separates signing these two objects for clarity; however, you may elect to create a front-end experience wherein it appears to the user that they are signing only one transaction.</p><p><img loading="lazy" alt="QuoteView Screenshot" src="/docs/assets/images/quote-view-screenshot-bb7980899a7221801f4e0dcbd30a3e5a.png" width="810" height="461" class="img_D_lb"></p><h3 class="anchor anchorWithStickyNavbar_ZTCp" id="uiux-walk-through-1">UI/UX Walk-through<a href="#uiux-walk-through-1" class="hash-link" aria-label="Direct link to UI/UX Walk-through" title="Direct link to UI/UX Walk-through">​</a></h3><ul><li>Display the <strong>sell</strong> and <strong>buy Amounts</strong> that the user pays and receives</li><li>If the user likes the quote, they can:<ul><li><strong>“Sign Approval”</strong> - <code>approval.eip712</code> is the “approval” object which contains the necessary information to process a gasless approval. It is requested via <code>checkApproval</code> (set in PriceView). You will only be able to initiate a gasless approval for the sell token if the response has both <code>isRequired</code> and <code>isGaslessAvailable</code> set to <code>true</code>.</li><li><strong>“Sign Trade”</strong> - <code>trade.eip712</code> is the “trade” object which contains the necessary information to process a trade.</li><li><strong>“Submit Order”</strong> - When all returned objects are signed, use can submit the trade</li></ul></li><li>⏰ Be aware the quote is time sensitive, valid for ~30s. Recommend adding timer that refreshes the quote to ensure it stays fresh.</li></ul><h3 class="anchor anchorWithStickyNavbar_ZTCp" id="code-3">Code<a href="#code-3" class="hash-link" aria-label="Direct link to Code" title="Direct link to Code">​</a></h3><h4 class="anchor anchorWithStickyNavbar_ZTCp" id="fetch-quote-with-get-tx-relayv1swapquote-with-checkapproval">Fetch quote with GET /tx-relay/v1/swap/quote with <code>checkApproval</code><a href="#fetch-quote-with-get-tx-relayv1swapquote-with-checkapproval" class="hash-link" aria-label="Direct link to fetch-quote-with-get-tx-relayv1swapquote-with-checkapproval" title="Direct link to fetch-quote-with-get-tx-relayv1swapquote-with-checkapproval">​</a></h4><p>The <a href="/docs/gasless-api/api-references/get-tx-relay-v1-swap-quote"><code>/tx-relay/v1/swap/quote</code></a> fetch is wrapped behind <a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/app/api/quote/route.ts" target="_blank" rel="noopener noreferrer"><code>/app/api/quote/route.ts</code></a>, triggered in the UI by the <a href="https://react.dev/reference/react/useEffect" target="_blank" rel="noopener noreferrer"><code>useEffect</code></a> hook here in <a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/app/components/quote.tsx#L55-L78" target="_blank" rel="noopener noreferrer"><code>/app/components/quote.tsx</code></a>, similar to what we did for PriceView.</p><p>The value of <code>checkApproval</code> is passed from PriceView. Recall that this is a boolean that indicates whether or not to check for approval and potentially return the approval object.</p><h4 class="anchor anchorWithStickyNavbar_ZTCp" id="sign-objects--split-signatures">Sign objects &amp; split signatures<a href="#sign-objects--split-signatures" class="hash-link" aria-label="Direct link to Sign objects &amp; split signatures" title="Direct link to Sign objects &amp; split signatures">​</a></h4><p>To take advantage of gases approvals, user must sign <code>approval.eip712</code> and the <code>trade.eip712</code> objects returned by <a href="/docs/next/gasless-api/guides/(/gasless-api/api-references/get-tx-relay-v1-swap-quote)"><code>/quote</code></a>. These objects contain everything you need needed to sign these objects (domain, types, primaryType, message). We use wagmi&#x27;s <a href="https://wagmi.sh/react/hooks/useSignTypedData" target="_blank" rel="noopener noreferrer"><code>useSignTypedData</code></a> hook to sign the objects. The returned signature is an Ethereum signature hex string.</p><p>Code to <a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/app/components/quote.tsx#L243-L283" target="_blank" rel="noopener noreferrer">sign approval object</a></p><div class="language-typescript codeBlockContainer_jAEB theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_KvLn"><pre tabindex="0" class="prism-code language-typescript codeBlock_MJTT thin-scrollbar"><code class="codeBlockLines_ZhcI"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">// Inside /app/components/quote.tsx</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> isSuccess</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> signTypedDataAsync </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">useSignTypedData</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    domain</span><span class="token operator">:</span><span class="token plain"> approvalEip712</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">domain</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    message</span><span class="token operator">:</span><span class="token plain"> approvalEip712</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">message</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    primaryType</span><span class="token operator">:</span><span class="token plain"> approvalEip712</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">primaryType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    types</span><span class="token operator">:</span><span class="token plain"> approvalEip712</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">types</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup_yTD5"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_hEBG" aria-hidden="true"><svg class="copyButtonIcon_e3Xs" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_IS7T" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Code to <a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/app/components/quote.tsx#L285-L322" target="_blank" rel="noopener noreferrer">sign trade object</a></p><div class="language-typescript codeBlockContainer_jAEB theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_KvLn"><pre tabindex="0" class="prism-code language-typescript codeBlock_MJTT thin-scrollbar"><code class="codeBlockLines_ZhcI"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">// Inside /app/components/quote.tsx</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> isSuccess</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> signTypedDataAsync </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">useSignTypedData</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    domain</span><span class="token operator">:</span><span class="token plain"> tradeEip712</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">domain</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    message</span><span class="token operator">:</span><span class="token plain"> tradeEip712</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">message</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    primaryType</span><span class="token operator">:</span><span class="token plain"> tradeEip712</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">primaryType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    types</span><span class="token operator">:</span><span class="token plain"> tradeEip712</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">types</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup_yTD5"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_hEBG" aria-hidden="true"><svg class="copyButtonIcon_e3Xs" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_IS7T" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Once signed, the signature needs to be split to its individual components (v, r, s) and to be formatted in an object that can be POST to <code>/submit</code> (see object format <a href="/docs/gasless-api/api-references/post-tx-relay-v1-swap-submit#example-request">here</a>).</p><p>For splitting signatures, we use a variation of this <a href="https://github.com/wevm/viem/discussions/458#discussioncomment-5842564" target="_blank" rel="noopener noreferrer"><code>splitSignature</code></a> implementation. Our implementation is set up in <a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/src/utils/signature.ts" target="_blank" rel="noopener noreferrer"><code>/src/utils/signature.ts</code></a>.</p><p>Code to <a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/app/components/quote.tsx#L181-L193" target="_blank" rel="noopener noreferrer">split signature for approval</a></p><div class="language-typescript codeBlockContainer_jAEB theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_KvLn"><pre tabindex="0" class="prism-code language-typescript codeBlock_MJTT thin-scrollbar"><code class="codeBlockLines_ZhcI"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">// Inside /app/components/quote.tsx</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">// if approval exists, split signature for approval and then format data to submit</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">gaslessApprovalSignature</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> approvalSplitSig </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">splitSignature</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">gaslessApprovalSignature</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin" style="color:rgb(189, 147, 249)">console</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">log</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">approvalSplitSig</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">&quot;&lt;-approvalSplitSig&quot;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">approvalDataToSubmit </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">type</span><span class="token operator">:</span><span class="token plain"> approvalType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">eip712</span><span class="token operator">:</span><span class="token plain"> approvalEip712</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">signature</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">...</span><span class="token plain">approvalSplitSig</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">v</span><span class="token operator">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">Number</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">approvalSplitSig</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">v</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">signatureType</span><span class="token operator">:</span><span class="token plain"> SignatureType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token constant" style="color:rgb(189, 147, 249)">EIP712</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><br></span></code></pre><div class="buttonGroup_yTD5"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_hEBG" aria-hidden="true"><svg class="copyButtonIcon_e3Xs" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_IS7T" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Code to <a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/app/components/quote.tsx#L196-L208" target="_blank" rel="noopener noreferrer">split signature for trade</a></p><div class="language-typescript codeBlockContainer_jAEB theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_KvLn"><pre tabindex="0" class="prism-code language-typescript codeBlock_MJTT thin-scrollbar"><code class="codeBlockLines_ZhcI"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">// Inside /app/components/quote.tsx</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">// split signature for trade and then format data to submit</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">tradeSignature</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> tradeSplitSig </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">splitSignature</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">tradeSignature</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin" style="color:rgb(189, 147, 249)">console</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">log</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">tradeSplitSig</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">&quot;&lt;-tradeSplitSig&quot;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">tradeDataToSubmit </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">type</span><span class="token operator">:</span><span class="token plain"> tradeType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">eip712</span><span class="token operator">:</span><span class="token plain"> tradeEip712</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">signature</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">...</span><span class="token plain">tradeSplitSig</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">v</span><span class="token operator">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">Number</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">tradeSplitSig</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">v</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">signatureType</span><span class="token operator">:</span><span class="token plain"> SignatureType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token constant" style="color:rgb(189, 147, 249)">EIP712</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><br></span></code></pre><div class="buttonGroup_yTD5"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_hEBG" aria-hidden="true"><svg class="copyButtonIcon_e3Xs" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_IS7T" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_ZTCp" id="submit-order-with-post-tx-relayv1swapsubmit">Submit order with POST /tx-relay/v1/swap/submit<a href="#submit-order-with-post-tx-relayv1swapsubmit" class="hash-link" aria-label="Direct link to Submit order with POST /tx-relay/v1/swap/submit" title="Direct link to Submit order with POST /tx-relay/v1/swap/submit">​</a></h4><p>Once the signed, split, and formatted approval and trade data objects are set up, we POST them to <a href="https://0x.org/docs/gasless-api/api-references/post-tx-relay-v1-swap-submit" target="_blank" rel="noopener noreferrer"><code>/tx-relay/v1/swap/submit</code></a> which is wrapped behind <a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/app/api/submit/route.ts" target="_blank" rel="noopener noreferrer"><code>/app/api/submit/route.ts</code></a>. This code is called from the &quot;Submit Order&quot; button in the UI (<a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/app/components/quote.tsx#L217-L239" target="_blank" rel="noopener noreferrer">code</a>).</p><p>If the submssion is successful, <code>/submit</code> responds with the order <code>type</code> and the <code>tradeHash</code>. Learn more about <a href="/docs/gasless-api/api-references/post-tx-relay-v1-swap-submit#example-response">submit responses</a>:</p><div class="language-typescript codeBlockContainer_jAEB theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_KvLn"><pre tabindex="0" class="prism-code language-typescript codeBlock_MJTT thin-scrollbar"><code class="codeBlockLines_ZhcI"><span class="token-line" style="color:#F8F8F2"><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">&quot;metatransaction_v2&quot;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token string-property property">&quot;tradeHash&quot;</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">&quot;0xde5a11983edd012047dd3107532f007a73ae488bfb354f35b8a40580e2a775a1&quot;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup_yTD5"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_hEBG" aria-hidden="true"><svg class="copyButtonIcon_e3Xs" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_IS7T" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>/submit</code> return whether or not the order was successful or if there is an error. The demo app has general error handling, for production-level apps, it&#x27;s recommended to include more robust error handling depdning on the returned <a href="/docs/gasless-api/api-references/post-tx-relay-v1-swap-submit#example-request">status code</a> (<a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/app/components/status.tsx#L15-L38" target="_blank" rel="noopener noreferrer">code</a>).</p><h2 class="anchor anchorWithStickyNavbar_ZTCp" id="-statusview">✅ StatusView<a href="#-statusview" class="hash-link" aria-label="Direct link to ✅ StatusView" title="Direct link to ✅ StatusView">​</a></h2><h3 class="anchor anchorWithStickyNavbar_ZTCp" id="what-is-it-4">What is it?<a href="#what-is-it-4" class="hash-link" aria-label="Direct link to What is it?" title="Direct link to What is it?">​</a></h3><p>This component checks and displays the status of the trade to the user. The logic for when this component appears in the UI is in <a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/app/page.tsx#L30-L35" target="_blank" rel="noopener noreferrer"><code>/app/page.tsx</code></a>, it is displayed if <code>tradeHash</code> has been set in QuoteView.</p><p><img loading="lazy" alt="StatusView Pending Screenshot" src="/docs/assets/images/status-view-pending-9eb5cd26da62c4dadbb87af2f3953a18.png" width="671" height="516" class="img_D_lb"></p><p><img loading="lazy" alt="StatusView Completed Screenshot" src="/docs/assets/images/status-view-completed-3f139e53ea2f1a969ce2e50fc672ea89.png" width="645" height="482" class="img_D_lb"></p><h3 class="anchor anchorWithStickyNavbar_ZTCp" id="uiux-walk-through-2">UI/UX Walk-through<a href="#uiux-walk-through-2" class="hash-link" aria-label="Direct link to UI/UX Walk-through" title="Direct link to UI/UX Walk-through">​</a></h3><ul><li>Display the trade status<ul><li><strong>“Transaction Pending ⏳” </strong>if transaction submission has not confirmed, or</li><li><strong>“Transaction Completed! 🎉”</strong> if transaction successfully mined</li></ul></li></ul><h3 class="anchor anchorWithStickyNavbar_ZTCp" id="code-4">Code<a href="#code-4" class="hash-link" aria-label="Direct link to Code" title="Direct link to Code">​</a></h3><h4 class="anchor anchorWithStickyNavbar_ZTCp" id="check-trade-status-with-get-tx-relayv1swapstatustrade-hash">Check trade status with GET /tx-relay/v1/swap/status/:trade-hash<a href="#check-trade-status-with-get-tx-relayv1swapstatustrade-hash" class="hash-link" aria-label="Direct link to Check trade status with GET /tx-relay/v1/swap/status/:trade-hash" title="Direct link to Check trade status with GET /tx-relay/v1/swap/status/:trade-hash">​</a></h4><p>Use GET <a href="/docs/gasless-api/api-references/get-tx-relay-v1-swap-status-trade-hash"><code>/tx-relay/v1/swap/status/:trade-hash</code></a> to check if the submitted trade was successful.</p><p>In <a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/app/page.tsx" target="_blank" rel="noopener noreferrer"><code>/page</code></a>, we add a third component, <code>StatusView</code>, that displays if the <code>tradeHash</code> has been set in QuoteView. To retrieve this, we setup a callback function <code>onSubmitSuccess={setTradeHash}</code> inside QuoteView that is called when <code>tradeHash</code> has been set.</p><div class="language-typescript codeBlockContainer_jAEB theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_KvLn"><pre tabindex="0" class="prism-code language-typescript codeBlock_MJTT thin-scrollbar"><code class="codeBlockLines_ZhcI"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">// Inside /app/page.tsx</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">tradeHash</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token operator">&lt;</span><span class="token plain">div className</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">&quot;p-8&quot;</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token operator">&lt;</span><span class="token plain">StatusView tradeHash</span><span class="token operator">=</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">tradeHash</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token plain">div</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&lt;</span><span class="token plain">QuoteView</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   checkApproval</span><span class="token operator">=</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">checkAppoval</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   price</span><span class="token operator">=</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">price</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   quote</span><span class="token operator">=</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">quote</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   setQuote</span><span class="token operator">=</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">setQuote</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   onSubmitSuccess</span><span class="token operator">=</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">setTradeHash</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// callback function for when tradeHash has been set</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   takerAddress</span><span class="token operator">=</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">address</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">/</span><span class="token operator">&gt;</span><br></span></code></pre><div class="buttonGroup_yTD5"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_hEBG" aria-hidden="true"><svg class="copyButtonIcon_e3Xs" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_IS7T" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="/docs/gasless-api/api-references/get-tx-relay-v1-swap-status-trade-hash"><code>/status</code></a> will continously respond with the <a href="/docs/gasless-api/api-references/get-tx-relay-v1-swap-status-trade-hash#shape-of-response">status of the transaction (e.g. pending, failed, success, submitted, confirmed)</a>, so we need to contiously poll the endpoint to check the current status. We do so using <code>setInterval(callback function, delay in ms)</code> and <code>useEffect</code> to continuously ping <code>/status</code> until the status is confirmed (<a href="https://github.com/0xProject/0x-examples/blob/main/gasless-next-app/app/components/status.tsx#L15-L38" target="_blank" rel="noopener noreferrer">code here</a>).</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_BahX"><div class="admonitionHeading_i6wc"><span class="admonitionIcon_nAy4"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_K8av"><p>Reminder: <code>/tx-relay/v1/swap/status/:trade-hash</code> doesn’t take <code>trade-hash</code> as a query param, just concatenate it on as part of the query</p></div></div><h2 class="anchor anchorWithStickyNavbar_ZTCp" id="monetization-your-swap-integration">Monetization your swap integration<a href="#monetization-your-swap-integration" class="hash-link" aria-label="Direct link to Monetization your swap integration" title="Direct link to Monetization your swap integration">​</a></h2><p>And as your business grows, Swap API offers low-friction ways to monetize your products.</p><p>Web3 teams can leverage Swap API to unlock new revenue streams by easily tapping into affiliate fee and trade surplus features. Regardless of whether you’re on a <a href="https://0x.org/pricing" target="_blank" rel="noopener noreferrer">free or paid plan</a>, monetization options are available to all integrators.</p><p>0x APIs offers two monetization options out-of-the-box:</p><ul><li>Collect affiliate fees (i.e. trading fee or commission)</li><li>Collect trade surplus (i.e. positive slippage)</li></ul><p>For more details about monetizing, check out the <a href="/docs/0x-swap-api/guides/monetize-your-app-using-swap">How to monetize your app using 0x Swap API</a> guide which discusses pricing considerations and shows code samples for how to easily implement these options.</p><h2 class="anchor anchorWithStickyNavbar_ZTCp" id="try-it-out">Try it out<a href="#try-it-out" class="hash-link" aria-label="Direct link to Try it out" title="Direct link to Try it out">​</a></h2><div class="theme-admonition theme-admonition-info alert alert--info admonition_BahX"><div class="admonitionHeading_i6wc"><span class="admonitionIcon_nAy4"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_K8av"><p>Here is code for the demo app, feel free to use it to get started quickly for your own project: <a href="https://github.com/0xProject/0x-examples/tree/main/gasless-next-app" target="_blank" rel="noopener noreferrer">https://github.com/0xProject/0x-examples/tree/main/gasless-next-app</a></p></div></div><h2 class="anchor anchorWithStickyNavbar_ZTCp" id="conclusion">Conclusion<a href="#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2><p>Building with Gasless API allows you to efficiently and securly implement gasless swaps and gasless approvals into your dApp and workflow, helping grow your user base with seamless onboarding and increasing retention.</p><p>By following the best practices outlined in this guide and demo, you can create a user-friendly and robust dApp that enables trustless token swapping across various networks.</p><p>Smooth swapping! 🚫⛽</p></div></article><nav class="pagination-nav docusaurus-mt-lg" aria-label="Docs pages navigation"></nav></div></div><div class="col col--3"><div class="tableOfContents_vpdH thin-scrollbar theme-doc-toc-desktop"><ul class="table-of-contents table-of-contents__left-border"><li><a href="#overview" class="table-of-contents__link toc-highlight">Overview</a></li><li><a href="#pre-requisites" class="table-of-contents__link toc-highlight">Pre-requisites</a></li><li><a href="#how-does-it-work" class="table-of-contents__link toc-highlight">How does it work?</a></li><li><a href="#project-structure" class="table-of-contents__link toc-highlight">Project structure</a></li><li><a href="#core-concepts-overview" class="table-of-contents__link toc-highlight">Core concepts overview</a></li><li><a href="#core-concepts-deep-dive" class="table-of-contents__link toc-highlight">Core concepts deep-dive</a></li><li><a href="#-rainbowkit" class="table-of-contents__link toc-highlight">🌈 RainbowKit</a><ul><li><a href="#what-is-it" class="table-of-contents__link toc-highlight">What is it?</a></li><li><a href="#code" class="table-of-contents__link toc-highlight">Code</a></li></ul></li><li><a href="#-token-lists" class="table-of-contents__link toc-highlight">🪙 Token lists</a><ul><li><a href="#what-is-it-1" class="table-of-contents__link toc-highlight">What is it?</a></li><li><a href="#code-1" class="table-of-contents__link toc-highlight">Code</a></li></ul></li><li><a href="#-priceview" class="table-of-contents__link toc-highlight">🏷 PriceView</a><ul><li><a href="#what-is-it-2" class="table-of-contents__link toc-highlight">What is it?</a></li><li><a href="#uiux-walk-through" class="table-of-contents__link toc-highlight">UI/UX Walk-through</a></li><li><a href="#code-2" class="table-of-contents__link toc-highlight">Code</a></li></ul></li><li><a href="#-quoteview" class="table-of-contents__link toc-highlight">💸 QuoteView</a><ul><li><a href="#what-is-it-3" class="table-of-contents__link toc-highlight">What is it?</a></li><li><a href="#uiux-walk-through-1" class="table-of-contents__link toc-highlight">UI/UX Walk-through</a></li><li><a href="#code-3" class="table-of-contents__link toc-highlight">Code</a></li></ul></li><li><a href="#-statusview" class="table-of-contents__link toc-highlight">✅ StatusView</a><ul><li><a href="#what-is-it-4" class="table-of-contents__link toc-highlight">What is it?</a></li><li><a href="#uiux-walk-through-2" class="table-of-contents__link toc-highlight">UI/UX Walk-through</a></li><li><a href="#code-4" class="table-of-contents__link toc-highlight">Code</a></li></ul></li><li><a href="#monetization-your-swap-integration" class="table-of-contents__link toc-highlight">Monetization your swap integration</a></li><li><a href="#try-it-out" class="table-of-contents__link toc-highlight">Try it out</a></li><li><a href="#conclusion" class="table-of-contents__link toc-highlight">Conclusion</a></li></ul></div></div></div></div></main></div></div><footer class="footer footer--dark"><div class="container container-fluid"><div class="row footer__links"><div class="col footer__col"><div class="footer__title">APIs</div><ul class="footer__items clean-list"><li class="footer__item"><a class="footer__link-item" href="/docs/category/swap-api">Swap API</a></li><li class="footer__item"><a class="footer__link-item" href="/docs/category/gasless-api">Gasless API</a></li></ul></div><div class="col footer__col"><div class="footer__title">Developers</div><ul class="footer__items clean-list"><li class="footer__item"><a href="https://dashboard.0x.org/" target="_blank" rel="noopener noreferrer" class="footer__link-item">Login/Sign Up</a></li><li class="footer__item"><a href="https://www.0x.org/content-hub" target="_blank" rel="noopener noreferrer" class="footer__link-item">Content Hub</a></li><li class="footer__item"><a class="footer__link-item" href="/docs/developer-resources/faqs-and-troubleshooting">FAQs &amp; Troubleshooting</a></li><li class="footer__item"><a href="https://status.0x.org/" target="_blank" rel="noopener noreferrer" class="footer__link-item">0x System Status</a></li><li class="footer__item"><a href="https://sepoliafaucet.com/" target="_blank" rel="noopener noreferrer" class="footer__link-item">Sepolia Faucet</a></li><li class="footer__item"><a href="https://www.alchemy.com/gwei-calculator" target="_blank" rel="noopener noreferrer" class="footer__link-item">Gwei Calculator</a></li></ul></div><div class="col footer__col"><div class="footer__title">Community</div><ul class="footer__items clean-list"><li class="footer__item"><a href="https://twitter.com/0xproject" target="_blank" rel="noopener noreferrer" class="footer__link-item">Twitter<svg width="13.5" height="13.5" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_lY7B"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li></ul></div></div><div class="footer__bottom text--center"><div class="footer__copyright">Copyright © 2024</div></div></div></footer></div>
<script src="/docs/assets/js/runtime~main.81fc3c4f.js"></script>
<script src="/docs/assets/js/main.f8b18ed4.js"></script>
</body>
</html>